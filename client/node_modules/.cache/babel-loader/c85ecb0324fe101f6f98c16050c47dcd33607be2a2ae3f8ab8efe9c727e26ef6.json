{"ast":null,"code":"var _jsxFileName = \"/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/CreateDrink.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateDrink({\n  email\n}) {\n  _s();\n  const [formErrors, setFormErrors] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n  useEffect(() => {\n    fetch(\"/drinks\").then(r => r.json()).then(setDrinks);\n  }, []);\n  const addDrink = newDrink => {\n    setDrinks([...drinks, newDrink]);\n  };\n  const formik = useFormik({\n    initialValues: {\n      drinkName: \"\",\n      ingredients: [\"\", \"\", \"\", \"\", \"\"],\n      instructions: \"\",\n      imageURL: \"\"\n    },\n    onSubmit: async values => {\n      const newDrink = {\n        strDrink: values.drinkName.charAt(0).toUpperCase() + values.drinkName.slice(1),\n        strDrinkThumb: values.imageURL.charAt(0).toUpperCase() + values.imageURL.slice(1),\n        strIngredient1: values.ingredients[0].charAt(0).toUpperCase() + values.ingredients[0].slice(1),\n        strIngredient2: values.ingredients[1].charAt(0).toUpperCase() + values.ingredients[1].slice(1),\n        strIngredient3: values.ingredients[2].charAt(0).toUpperCase() + values.ingredients[2].slice(1),\n        strIngredient4: values.ingredients[3].charAt(0).toUpperCase() + values.ingredients[3].slice(1),\n        strIngredient5: values.ingredients[4].charAt(0).toUpperCase() + values.ingredients[4].slice(1),\n        strInstructions: values.instructions.charAt(0).toUpperCase() + values.instructions.slice(1)\n      };\n      // console.log(newDrink);\n      const response = await fetch(\"/create_drink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newDrink)\n      });\n      if (response.ok) {\n        const drink = await response.json();\n        addDrink(drink);\n        formik.resetForm();\n        setFormErrors([]);\n        let drinkId = drink.id;\n        const favResponse = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            drinkId\n          })\n        });\n        if (favResponse.ok) {} else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      } else {\n        const err = await response.json();\n        setFormErrors(err.errors);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"new-drink-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"drinkName\",\n      name: \"drinkName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.drinkName,\n      placeholder: \"Drink Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), formik.values.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n      id: `ingredients[${index}]`,\n      name: `ingredients[${index}]`,\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.ingredients[index],\n      placeholder: `Ingredient ${index + 1}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"imageURL\",\n      name: \"imageURL\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.imageURL,\n      placeholder: \"Image URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"instructions\",\n      name: \"instructions\",\n      onChange: formik.handleChange,\n      value: formik.values.instructions,\n      placeholder: \"Instructions\",\n      rows: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), formErrors.length > 0 ? formErrors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: err\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Add Drink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateDrink, \"xlL18BaWwO2jcV294krCLsyBKU4=\", false, function () {\n  return [useFormik];\n});\n_c = CreateDrink;\nexport default CreateDrink;\nvar _c;\n$RefreshReg$(_c, \"CreateDrink\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","jsxDEV","_jsxDEV","CreateDrink","email","_s","formErrors","setFormErrors","drinks","setDrinks","fetch","then","r","json","addDrink","newDrink","formik","initialValues","drinkName","ingredients","instructions","imageURL","onSubmit","values","strDrink","charAt","toUpperCase","slice","strDrinkThumb","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strInstructions","response","method","headers","body","JSON","stringify","ok","drink","resetForm","drinkId","id","favResponse","console","error","err","errors","handleSubmit","className","children","name","type","onChange","handleChange","value","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","ingredient","index","rows","length","style","color","_c","$RefreshReg$"],"sources":["/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/CreateDrink.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import * as yup from \"yup\";\nimport { useFormik } from \"formik\";\n\nfunction CreateDrink({ email }) {\n  const [formErrors, setFormErrors] = useState([]);\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    fetch(\"/drinks\")\n      .then((r) => r.json())\n      .then(setDrinks);\n  }, []);\n\n  const addDrink = (newDrink) => {\n    setDrinks([...drinks, newDrink]);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      drinkName: \"\",\n      ingredients: [\"\", \"\", \"\", \"\", \"\"],\n      instructions: \"\",\n      imageURL: \"\", \n    },\n    onSubmit: async (values) => {\n      const newDrink = {\n        strDrink:\n          values.drinkName.charAt(0).toUpperCase() + values.drinkName.slice(1),\n        strDrinkThumb:\n          values.imageURL.charAt(0).toUpperCase() + values.imageURL.slice(1),\n        strIngredient1:\n          values.ingredients[0].charAt(0).toUpperCase() +\n          values.ingredients[0].slice(1),\n        strIngredient2:\n          values.ingredients[1].charAt(0).toUpperCase() +\n          values.ingredients[1].slice(1),\n        strIngredient3:\n          values.ingredients[2].charAt(0).toUpperCase() +\n          values.ingredients[2].slice(1),\n        strIngredient4:\n          values.ingredients[3].charAt(0).toUpperCase() +\n          values.ingredients[3].slice(1),\n        strIngredient5:\n          values.ingredients[4].charAt(0).toUpperCase() +\n          values.ingredients[4].slice(1),\n        strInstructions:\n          values.instructions.charAt(0).toUpperCase() +\n          values.instructions.slice(1),\n      };\n      // console.log(newDrink);\n      const response = await fetch(\"/create_drink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newDrink),\n      });\n      if (response.ok) {\n        const drink = await response.json();\n        addDrink(drink);\n        formik.resetForm();\n        setFormErrors([]);\n        let drinkId = drink.id;\n        const favResponse = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, drinkId }),\n        });\n        if (favResponse.ok) {\n        } else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      } else {\n        const err = await response.json();\n        setFormErrors(err.errors);\n      }\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} className=\"new-drink-form\">\n      <input\n        id=\"drinkName\"\n        name=\"drinkName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.drinkName}\n        placeholder=\"Drink Name\"\n      />\n      {formik.values.ingredients.map((ingredient, index) => (\n        <input\n          key={index}\n          id={`ingredients[${index}]`}\n          name={`ingredients[${index}]`}\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.ingredients[index]}\n          placeholder={`Ingredient ${index + 1}`}\n        />\n      ))}\n\n      \n      <input\n        id=\"imageURL\"\n        name=\"imageURL\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.imageURL}\n        placeholder=\"Image URL\"\n      />\n      <textarea\n        id=\"instructions\"\n        name=\"instructions\"\n        onChange={formik.handleChange}\n        value={formik.values.instructions}\n        placeholder=\"Instructions\"\n        rows={5}\n      />\n      {formErrors.length > 0\n        ? formErrors.map((err, index) => (\n            <p key={index} style={{ color: \"red\" }}>\n              {err}\n            </p>\n          ))\n        : null}\n      <input type=\"submit\" value=\"Add Drink\" />\n    </form>\n  );\n}\n\nexport default CreateDrink;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}