{"ast":null,"code":"var _jsxFileName = \"/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/FavoriteButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"./LoginContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FavoriteButton({\n  drinkId,\n  email\n}) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [userFavoriteDrinks, setUserFavoriteDrinks] = useState([]);\n  const [isDrinkFavorited, setIsDrinkFavorited] = useState(false);\n\n  // Load favorited drinks from localStorage on component mount\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchUserFavoriteDrinks();\n  }, []);\n\n  // Fetch user's favorite drinks\n  const fetchUserFavoriteDrinks = async () => {\n    try {\n      const response = await fetch(\"user_favorite_drinks_button\");\n      if (response.ok) {\n        const userDrinkData = await response.json();\n        setUserFavoriteDrinks(userDrinkData);\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching favorite drinks:\", error);\n    }\n  };\n\n  // Update isDrinkFavorited whenever userFavoriteDrinks or drinkId changes\n  useEffect(() => {\n    setIsDrinkFavorited(userFavoriteDrinks.some(favoriteDrink => favoriteDrink.drink_id === drinkId));\n  }, [userFavoriteDrinks, drinkId]);\n  const handleFavoriteClick = async () => {\n    try {\n      if (isDrinkFavorited) {\n        // If already favorited, send a DELETE request to remove it from favorites on the server\n        const response = await fetch(`/user_favorite_drinks/${drinkId}`, {\n          method: \"DELETE\"\n        });\n        if (response.ok) {\n          // Remove the drink from the user's favorite drinks list in local storage\n          setUserFavoriteDrinks(prevFavoriteDrinks => prevFavoriteDrinks.filter(FavoriteDrink => FavoriteDrink.drink_id !== drinkId));\n        } else {\n          console.error(\"Failed to remove drink from favorites on the server\");\n        }\n      } else {\n        // If not favorited, send a POST request to add it to favorites on the server\n        const response = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            drinkId\n          })\n        });\n        if (response.ok) {\n          // Add the drink to the user's favorite drink list in local storage\n          setUserFavoriteDrinks(prevFavoriteDrinks => [...prevFavoriteDrinks, {\n            drink_id: drinkId\n          }]);\n        } else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  // console.log(userFavoriteDrinks)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavoriteClick,\n      children: isDrinkFavorited ? \"Unfavorite\" : \"Favorite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(FavoriteButton, \"WddsiFrVn9jI3sqENDJu+G+IMkI=\", false, function () {\n  return [useAuth];\n});\n_c = FavoriteButton;\nexport default FavoriteButton;\nvar _c;\n$RefreshReg$(_c, \"FavoriteButton\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","jsxDEV","_jsxDEV","FavoriteButton","drinkId","email","_s","user","userFavoriteDrinks","setUserFavoriteDrinks","isDrinkFavorited","setIsDrinkFavorited","window","scrollTo","fetchUserFavoriteDrinks","response","fetch","ok","userDrinkData","json","error","console","some","favoriteDrink","drink_id","handleFavoriteClick","method","prevFavoriteDrinks","filter","FavoriteDrink","headers","body","JSON","stringify","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/FavoriteButton.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"./LoginContext\";\n\nfunction FavoriteButton({ drinkId, email }) {\n  const { user } = useAuth();\n  const [userFavoriteDrinks, setUserFavoriteDrinks] = useState([]);\n  const [isDrinkFavorited, setIsDrinkFavorited] = useState(false);\n\n  // Load favorited drinks from localStorage on component mount\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    fetchUserFavoriteDrinks();\n  }, []);\n\n  // Fetch user's favorite drinks\n  const fetchUserFavoriteDrinks = async () => {\n    try {\n      const response = await fetch(\"user_favorite_drinks_button\");\n\n      if (response.ok) {\n        const userDrinkData = await response.json();\n        setUserFavoriteDrinks(userDrinkData);\n      }\n    } catch (error) {\n      console.error(\"An error occurred while fetching favorite drinks:\", error);\n    }\n  };\n\n  // Update isDrinkFavorited whenever userFavoriteDrinks or drinkId changes\n  useEffect(() => {\n    setIsDrinkFavorited(\n      userFavoriteDrinks.some((favoriteDrink) => favoriteDrink.drink_id === drinkId)\n    );\n  }, [userFavoriteDrinks, drinkId]);\n\n  const handleFavoriteClick = async () => {\n    try {\n      if (isDrinkFavorited) {\n        // If already favorited, send a DELETE request to remove it from favorites on the server\n        const response = await fetch(`/user_favorite_drinks/${drinkId}`, {\n          method: \"DELETE\",\n        });\n        if (response.ok) {\n          // Remove the drink from the user's favorite drinks list in local storage\n          setUserFavoriteDrinks((prevFavoriteDrinks) =>\n          prevFavoriteDrinks.filter((FavoriteDrink) => FavoriteDrink.drink_id !== drinkId)\n          );\n        } else {\n          console.error(\"Failed to remove drink from favorites on the server\");\n        }\n      } else {\n        // If not favorited, send a POST request to add it to favorites on the server\n        const response = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, drinkId }),\n        });\n        if (response.ok) {\n          // Add the drink to the user's favorite drink list in local storage\n          setUserFavoriteDrinks((prevFavoriteDrinks) => [\n            ...prevFavoriteDrinks,\n            { drink_id: drinkId },\n          ]);\n        } else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  // console.log(userFavoriteDrinks)\n  return (\n    <div>\n      {user ? (\n        <button onClick={handleFavoriteClick}>\n          {isDrinkFavorited ? \"Unfavorite\" : \"Favorite\"}\n        </button>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n\nexport default FavoriteButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}