{"ast":null,"code":"var _jsxFileName = \"/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/EmailPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport DrinkDisplay from \"./DrinkDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailPopup({\n  email\n}) {\n  _s();\n  const [formErrors, setFormErrors] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      ingredients: [\"\", \"\", \"\", \"\", \"\"],\n      instructions: \"\",\n      imageURL: \"\"\n      // strCategory: \"\",\n    },\n\n    onSubmit: async values => {\n      const newEmail = {\n        strDrink: values.name.charAt(0).toUpperCase() + values.name.slice(1),\n        strDrinkThumb: values.imageURL.charAt(0).toUpperCase() + values.imageURL.slice(1),\n        strIngredient1: values.ingredients[0].charAt(0).toUpperCase() + values.ingredients[0].slice(1),\n        strIngredient2: values.ingredients[1].charAt(0).toUpperCase() + values.ingredients[1].slice(1),\n        strIngredient3: values.ingredients[2].charAt(0).toUpperCase() + values.ingredients[2].slice(1),\n        strIngredient4: values.ingredients[3].charAt(0).toUpperCase() + values.ingredients[3].slice(1),\n        strIngredient5: values.ingredients[4].charAt(0).toUpperCase() + values.ingredients[4].slice(1),\n        strInstructions: values.instructions.charAt(0).toUpperCase() + values.instructions.slice(1)\n        // strCategory: \"User created\",\n      };\n      // console.log(newDrink);\n      const response = await fetch(\"/create_drink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newEmail)\n      });\n      if (response.ok) {\n        const drink = await response.json();\n        formik.resetForm();\n        setFormErrors([]);\n        let drinkId = drink.id;\n        const favResponse = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email,\n            drinkId\n          })\n        });\n        if (favResponse.ok) {} else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      } else {\n        const err = await response.json();\n        setFormErrors(err.errors);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/emailpopup/email-popup.png\",\n      id: \"email-popup-image\",\n      alt: \"Email Popup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/emailpopup/email-popup-button.png\",\n      id: \"email-signup-button\",\n      alt: \"Email Signup Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"new-drink-text\",\n      children: \"Fill Out Form to Create a Drink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"create-drink-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        className: \"new-drink-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.name,\n          placeholder: \"Drink Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), formik.values.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `ingredients[${index}]`,\n          name: `ingredients[${index}]`,\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.ingredients[index],\n          placeholder: `Ingredient ${index + 1}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"imageURL\",\n          name: \"imageURL\",\n          type: \"text\",\n          onChange: formik.handleChange,\n          value: formik.values.imageURL,\n          placeholder: \"Image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"instructions\",\n          name: \"instructions\",\n          onChange: formik.handleChange,\n          value: formik.values.instructions,\n          placeholder: \"Instructions\",\n          rows: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), formErrors.length > 0 ? formErrors.map((err, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: err\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }, this)) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Drink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailPopup, \"l2LJBn2Wpx87Vcqj4ce2HXkEFKo=\", false, function () {\n  return [useFormik];\n});\n_c = EmailPopup;\nexport default EmailPopup;\nvar _c;\n$RefreshReg$(_c, \"EmailPopup\");","map":{"version":3,"names":["React","useState","useEffect","useFormik","DrinkDisplay","jsxDEV","_jsxDEV","EmailPopup","email","_s","formErrors","setFormErrors","formik","initialValues","name","ingredients","instructions","imageURL","onSubmit","values","newEmail","strDrink","charAt","toUpperCase","slice","strDrinkThumb","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strInstructions","response","fetch","method","headers","body","JSON","stringify","ok","drink","json","resetForm","drinkId","id","favResponse","console","error","err","errors","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","onChange","handleChange","value","placeholder","map","ingredient","index","rows","length","style","color","_c","$RefreshReg$"],"sources":["/Users/aaronsmith/development/code/phase-4/cocktail-creator/client/src/components/EmailPopup.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport DrinkDisplay from \"./DrinkDisplay\";\n\nfunction EmailPopup({ email }) {\n  const [formErrors, setFormErrors] = useState([]);\n  const formik = useFormik({\n    initialValues: {\n      name: \"\",\n      ingredients: [\"\", \"\", \"\", \"\", \"\"],\n      instructions: \"\",\n      imageURL: \"\",\n      // strCategory: \"\",\n    },\n    onSubmit: async (values) => {\n      const newEmail = {\n        strDrink:\n          values.name.charAt(0).toUpperCase() + values.name.slice(1),\n        strDrinkThumb:\n          values.imageURL.charAt(0).toUpperCase() + values.imageURL.slice(1),\n        strIngredient1:\n          values.ingredients[0].charAt(0).toUpperCase() +\n          values.ingredients[0].slice(1),\n        strIngredient2:\n          values.ingredients[1].charAt(0).toUpperCase() +\n          values.ingredients[1].slice(1),\n        strIngredient3:\n          values.ingredients[2].charAt(0).toUpperCase() +\n          values.ingredients[2].slice(1),\n        strIngredient4:\n          values.ingredients[3].charAt(0).toUpperCase() +\n          values.ingredients[3].slice(1),\n        strIngredient5:\n          values.ingredients[4].charAt(0).toUpperCase() +\n          values.ingredients[4].slice(1),\n        strInstructions:\n          values.instructions.charAt(0).toUpperCase() +\n          values.instructions.slice(1),\n        // strCategory: \"User created\",\n      };\n      // console.log(newDrink);\n      const response = await fetch(\"/create_drink\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newEmail),\n      });\n      if (response.ok) {\n        const drink = await response.json();\n\n        formik.resetForm();\n        setFormErrors([]);\n        let drinkId = drink.id;\n        const favResponse = await fetch(\"/favorite_drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ email, drinkId }),\n        });\n        if (favResponse.ok) {\n        } else {\n          console.error(\"Failed to add drink to favorites on the server\");\n        }\n      } else {\n        const err = await response.json();\n        setFormErrors(err.errors);\n      }\n    },\n  });\n  \n  return (\n    <div className=\"email-popup\"> \n      <img\n        src=\"/images/emailpopup/email-popup.png\"\n        id=\"email-popup-image\" \n        alt=\"Email Popup\"\n      />\n      <img\n        src=\"/images/emailpopup/email-popup-button.png\"\n        id=\"email-signup-button\" \n        alt=\"Email Signup Button\"\n      />\n\n<h3 id=\"new-drink-text\">Fill Out Form to Create a Drink</h3>\n        <div id=\"create-drink-container\">\n          <form onSubmit={formik.handleSubmit} className=\"new-drink-form\">\n            <input\n              id=\"name\"\n              name=\"name\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n              placeholder=\"Drink Name\"\n            />\n            {formik.values.ingredients.map((ingredient, index) => (\n              <input\n                key={index}\n                id={`ingredients[${index}]`}\n                name={`ingredients[${index}]`}\n                type=\"text\"\n                onChange={formik.handleChange}\n                value={formik.values.ingredients[index]}\n                placeholder={`Ingredient ${index + 1}`}\n              />\n            ))}\n\n            <input\n              id=\"imageURL\"\n              name=\"imageURL\"\n              type=\"text\"\n              onChange={formik.handleChange}\n              value={formik.values.imageURL}\n              placeholder=\"Image URL\"\n            />\n            <textarea\n              id=\"instructions\"\n              name=\"instructions\"\n              onChange={formik.handleChange}\n              value={formik.values.instructions}\n              placeholder=\"Instructions\"\n              rows={5}\n            />\n            {formErrors.length > 0\n              ? formErrors.map((err, index) => (\n                  <p key={index} style={{ color: \"red\" }}>\n                    {err}\n                  </p>\n                ))\n              : null}\n            <input type=\"submit\" value=\"Add Drink\" />\n          </form>\n    </div>\n    </div>\n  );\n}\n\nexport default EmailPopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}